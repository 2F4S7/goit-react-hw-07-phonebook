{"version":3,"sources":["components/Section/Top/Top.module.css","components/Section/Bot/Bot.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Section/Top/Top.js","components/Section/Bot/Bot.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","ContactForm","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","contacts","map","contact","includes","alert","onSubmit","resetForm","this","className","styles","label","input","type","pattern","title","required","onChange","button","Component","connect","items","dispatch","Top","children","style","top","defaultProps","bottom","onClick","item","filter","normalizedFilter","toLowerCase","list","App","Bot","itemsReducer","createReducer","filterReducer","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8844595e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Top_title__jKUR-\",\"top\":\"Top_top__xWPhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Bot_title__3N86g\",\"bottom\":\"Bot_bottom__2gv7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3tEOo\",\"label\":\"Filter_label__3qKPl\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst filterContacts = createAction('contacts/filter');\n\nconst actions = { addContact, deleteContact, filterContacts };\n\nexport default actions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const names = this.props.contacts.map(contact => contact.name);\n\n    names.includes(name)\n      ? alert(`${name} is already in contacts`)\n      : this.props.onSubmit({ ...this.state });\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange } = this;\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts: { items } }) => ({\n  contacts: items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => {\n    return dispatch(actions.addContact(contact));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Top.module.css';\r\n\r\nconst Top = ({ title, children }) => {\r\n  return (\r\n    <section className={style.top}>\r\n      <h2 className={style.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nTop.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nTop.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Top;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Bot.module.css';\r\n\r\nconst Top = ({ title, children }) => {\r\n  return (\r\n    <section className={style.bottom}>\r\n      <h2 className={style.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nTop.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nTop.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Top;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport actions from '../../../redux/contacts/contacts-actions';\nimport { connect } from 'react-redux';\nimport styles from '../ContactList.module.css';\n\nconst ContactItem = ({ id, name, number, onClick }) => {\n  return (\n    <li className={styles.item}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.number}>{number}</p>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onClick(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ContactItem from './ContactItem';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => {\n        const { id, name, number } = contact;\n\n        return <ContactItem key={id} name={name} number={number} id={id} />;\n      })}\n    </ul>\n  );\n};\n\nconst filterContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: filterContacts(items, filter),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { filter } }) => ({\n  value: filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: ({ target: { value } }) => dispatch(actions.filterContacts(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport Top from './components/Section/Top';\r\nimport Bot from './components/Section/Bot';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Top title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Top>\r\n\r\n      <Bot title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Bot>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst itemsInitialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = createReducer(itemsInitialState, {\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filterContacts]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"ContactList_number__2NjpT\",\"name\":\"ContactList_name__195hh\",\"item\":\"ContactList_item__26X3k\",\"list\":\"ContactList_list__1QoeL\",\"button\":\"ContactList_button__28ug-\",\"form\":\"ContactList_form__qubnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2eUY7\",\"label\":\"ContactForm_label__1Bxel\",\"input\":\"ContactForm_input__3pHvl\",\"button\":\"ContactForm_button__m2NMq\"};"],"sourceRoot":""}